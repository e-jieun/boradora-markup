// common
*{
  margin: 0;
  padding: 0;
}
// common
*{
  margin: 0;
  padding: 0;
}
//variable
$color-bk: black;
$color-c4: #c4c4c4;
$color-dp: #8068AD;
$color-pp: #C8B5C8;
$color-yel: #EDEBB2;
$color-cr: #FFFEF9;
$border-bk: 1px solid black;
$border-red: 1px solid red;
$center: center;
$per100: 100%;
//class-set
@mixin flex-align-justify($align, $justify) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
}
@mixin border($px, $color) {
  border: $px solid $color;
}
//style
#root{
  width: 100vw;
  height: 100vh;
  .con{
    width: inherit;
    height: inherit;
    header{
      width: inherit;
      height: 30vh;
      // @include border(1px, red);
      >div{
        width: inherit;
        height: 10%;
        // @include border(1px, red);
      }
      // 재생화면
      >div:nth-child(2){
        width: inherit;
        height: 80%;
        background-color: $color-c4;
        // @include border(1px, red);
        >div{
          width: inherit;
          height: $per100;
          @include flex-align-justify($center, space-around);
          >div{
            width: 60px;
            height: 60px;
            background-color: $color-cr;
            text-align: $center;
            @include flex-align-justify($center, $center);
            border-radius: $per100;
            color: $color-pp;
            &:active{
              background-color: $color-pp;
              color: $color-cr;
              transition: 1s;
            }
            >div{
              font-size: 0.8em;
              width: inherit;
              text-align: $center;
            }
          }
        }  
      }
      >div:nth-child(3){
        @include flex-align-justify(flex-end, $center);
        >div{
          width: inherit;
          height: 50%;
          background-color: $color-pp;
          @include flex-align-justify($center, flex-start);
          >div{
            width: 70%;
            height: 70%;
            background-color: $color-yel;
            @include border(1px, $color-pp);
            &:hover{
              background-color: $color-cr;
            }
          }
        }
      }
    }
    // 무자막 모드 con
    main{
      width: inherit;
      height: 60vh;
      // @include border(1px, green);
      @include flex-align-justify($center, space-between);
      flex-direction: column;
      >div{
        // @include border(1px, green);
      }
      // 자막 공간
      >div:nth-child(1){
        width: inherit;
        height: 70%;
        >div{
          >i{
            position: absolute;
            left: 10vw;
            top: 39vh;
            color: $color-dp;
          }
        }
      }
      // 기능 아이콘
      >div:nth-child(2){
        width: $per100;
        height: 30%;
        @include flex-align-justify($center, space-around);        
        position: fixed;
        top: 69vh;
        left: 0;
        >div{
          width: 70px;
          height: 70px;
          // @include border(1px, $color-dp);
          @include flex-align-justify($center, $center);
          border-radius: $per100;
          background-color: $color-dp;
          box-shadow: 1px 1px 5px rgba($color: $color-dp, $alpha: .5);
          // !텍스트를 부모 태그에서 값을 주면 가상 클래스 적용해도 동떨어지지 않고 부모 태그 내 어느 영역에 움직임을 주더라도 적용이 된다
          // !가상 클래스 효과는 부모 태그에 부여하는 것이 좋다
          color: $color-cr;
          &:active{
            width: 65px;
            height: 65px;
            background-color: $color-cr;
            @include border(3px, $color-dp);
            color: $color-dp;
          }
          >div{
            text-align: center;
            // color: $color-cr;
          }
        }
        >div:nth-child(4){
          @include flex-align-justify($center, $center);
          flex-direction: column;
          >div{
            // ?글씨가 오버플로우되서 글씨가 원하는대로 모양새가 나오지 않고 틀어짐
            // !active 가상클래스의 효과 중에 border를 넣었는데 이로 인해 크기 변화가 생기면서 텍스트가 오버플로우되는 현상이 일어났던 것, 텍스트 박스 자체를 키워줌으로서 해결함
            // ?div 간격 해결할 것?
            width: 110%;
            height: 1.5em;
            // !div 간격이 이미 100%인 상태여서 %단위로는 줄일 수 없었음, 그러므로 em단위를 사용해서 글자에 비례하는 크기로 height 값을 주었더니 문제를 해결할 수 있었음            
            text-align: center;
            position: relative;
            top: 5px;

          }
        }
      }
    }
    footer{
      width: inherit;
      height: 10vh;
      background-color: gray;
      ul{
        width: inherit;
        height: inherit;
        list-style-type: none;
        @include flex-align-justify($center, space-around);
        li{
          height: inherit;
          flex-grow: 1;
          background-color: $color-yel;
          // @include border(1px, #fff);
          @include flex-align-justify($center, $center);
          &:hover{
            background-color: $color-pp;
            transition: 1s;
          } 
          i{
            color: $color-dp;
            // !글자처럼 아이콘도 font-size로 지정해줘야 함
            font-size: 2em;
          }
        }
      }
    }
  }
}

